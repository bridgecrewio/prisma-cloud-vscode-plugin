{
  "name": "prisma-cloud",
  "private": true,
  "displayName": "Prisma Cloud",
  "publisher": "PrismaCloud",
  "repository": "https://github.com/bridgecrewio/prisma-cloud-vscode-plugin",
  "icon": "static/icons/prisma.png",
  "description": "a static code analysis tool to scan code for Infrastructure-as-Code (IaC) misconfigurations, Software Composition Analysis (SCA) issues and Secrets vulnerabilities.",
  "version": "1.0.22",
  "engines": {
    "vscode": "^1.79.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "prisma-cloud",
          "title": "Prisma Cloud",
          "icon": "static/icons/svg/prisma.svg"
        }
      ]
    },
    "views": {
      "prisma-cloud": [
        {
          "id": "general",
          "name": "General Actions",
          "visibility": "collapsed",
          "initialSize": 1
        },
        {
          "id": "iac-misconfiguration",
          "name": "IaC Misconfiguration"
        },
        {
          "id": "secrets",
          "name": "Secrets"
        },
        {
          "id": "vulnerabilities",
          "name": "Vulnerabilities"
        },
        {
          "id": "licenses",
          "name": "Licenses"
        },
        {
          "id": "weaknesses",
          "name": "Weaknesses",
          "when": "weaknessesViewVisible"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "general",
        "contents": "[Run full scan](command:checkov.execute)\n[Test Connection](command:connection.test)"
      }
    ],
    "commands": [
      {
        "command": "checkov.install",
        "title": "Checkov: Install"
      },
      {
        "command": "checkov.execute",
        "title": "Checkov: Execute",
        "icon": "$(run)"
      },
      {
        "command": "filter.infoEnable",
        "title": "Info"
      },
      {
        "command": "filter.infoDisable",
        "title": "✓ Info"
      },
      {
        "command": "filter.lowEnable",
        "title": "Low"
      },
      {
        "command": "filter.lowDisable",
        "title": "✓ Low"
      },
      {
        "command": "filter.mediumEnable",
        "title": "Medium"
      },
      {
        "command": "filter.mediumDisable",
        "title": "✓ Medium"
      },
      {
        "command": "filter.highEnable",
        "title": "High"
      },
      {
        "command": "filter.highDisable",
        "title": "✓ High"
      },
      {
        "command": "filter.criticalEnable",
        "title": "Critical"
      },
      {
        "command": "filter.criticalDisable",
        "title": "✓ Critical"
      },
      {
        "command": "prisma.open-log",
        "title": "Open Prisma Log"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "checkov.execute",
          "group": "navigation",
          "when": "view == general"
        },
        {
          "submenu": "filters",
          "group": "navigation",
          "when": "view != general"
        }
      ],
      "filters": [
        {
          "command": "filter.infoEnable",
          "group": "navigation@1",
          "when": "!vscode:isINFOFilterEnabled"
        },
        {
          "command": "filter.infoDisable",
          "group": "navigation@2",
          "when": "vscode:isINFOFilterEnabled"
        },
        {
          "command": "filter.lowEnable",
          "group": "navigation@3",
          "when": "!vscode:isLOWFilterEnabled"
        },
        {
          "command": "filter.lowDisable",
          "group": "navigation@3",
          "when": "vscode:isLOWFilterEnabled"
        },
        {
          "command": "filter.mediumEnable",
          "group": "navigation@4",
          "when": "!vscode:isMEDIUMFilterEnabled"
        },
        {
          "command": "filter.mediumDisable",
          "group": "navigation@5",
          "when": "vscode:isMEDIUMFilterEnabled"
        },
        {
          "command": "filter.highEnable",
          "group": "navigation@6",
          "when": "!vscode:isHIGHFilterEnabled"
        },
        {
          "command": "filter.highDisable",
          "group": "navigation@7",
          "when": "vscode:isHIGHFilterEnabled"
        },
        {
          "command": "filter.criticalEnable",
          "group": "navigation@8",
          "when": "!vscode:isCRITICALFilterEnabled"
        },
        {
          "command": "filter.criticalDisable",
          "group": "navigation@9",
          "when": "vscode:isCRITICALFilterEnabled"
        }
      ]
    },
    "submenus": [
      {
        "id": "filters",
        "label": "Filters",
        "icon": "$(filter)"
      }
    ],
    "configuration": {
      "title": "Prisma Cloud",
      "properties": {
        "prismaCloud.accessKey": {
          "order": 0,
          "markdownDescription": "Required to access all Prisma Cloud scan types. Without it, access is limited to open source scan capabilities",
          "type": "string",
          "pattern": "^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$",
          "errorMessage": "Access Key must be a valid UUID."
        },
        "prismaCloud.secretKey": {
          "order": 1,
          "markdownDescription": "Required to access all Prisma Cloud scan types. Without it, access is limited to open source scan capabilities",
          "type": "string"
        },
        "prismaCloud.prismaURL": {
          "order": 2,
          "markdownDescription": "Required if access key and secret key are provided",
          "type": "string",
          "pattern": "^https://api[a-zA-Z0-9.-]+(:[0-9]+)?(/.*)?$",
          "errorMessage": "Prisma URL must be a valid URL starting with 'https://api'."
        },
        "prismaCloud.checkovVersion": {
          "order": 3,
          "title": "Checkov version",
          "type": "string",
          "markdownDescription": "Leave blank to use the latest Checkov version (or enter “latest”), or specify a version like 2.0.123",
          "readOnly": true
        },
        "prismaCloud.disableErrorMessagePopups": {
          "order": 4,
          "markdownDescription": "Hides error message popups. View errors in the logs via the ‘Open Prisma Log’ command",
          "type": "boolean",
          "default": false
        },
        "prismaCloud.certificate": {
          "order": 5,
          "markdownDescription": "Add the CA certificate as a .pem file format",
          "type": "string"
        },
        "prismaCloud.useEnforcementRules": {
          "order": 6,
          "markdownDescription": "Enforce soft-fail thresholds for Prisma Cloud scans",
          "type": "boolean"
        },
        "prismaCloud.externalChecksDirectory": {
          "order": 7,
          "markdownDescription": "Provide the path to the folder containing custom security checks",
          "type": "string"
        },
        "prismaCloud.skipSSLVerification": {
          "order": 8,
          "markdownDescription": "Bypass SSL certificate verification for troubleshooting purposes in test environments ONLY.  \n Do NOT skip in production due to potential security risks from undetected invalid or falsified certificates",
          "type": "boolean"
        },
        "prismaCloud.specificFrameworks": {
          "order": 9,
          "title": "Frameworks",
          "markdownDescription": "Scan specific frameworks (e.g., 'arm json secrets serverless'). Add multiple frameworks using spaces.  \n See [Checkov Frameworks](https://www.checkov.io/2.Basics/CLI%20Command%20Reference.html) for more information",
          "type": "string"
        },
        "prismaCloud.sastFullScanSizeLimit": {
          "order": 10,
          "markdownDescription": "Set the threshold (in MB), above which SAST will not run on a repository",
          "type": "number",
          "default": 512
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "20.2.5",
    "@types/uuid": "^9.0.3",
    "@types/vscode": "^1.79.0",
    "@typescript-eslint/eslint-plugin": "^5.62.0",
    "@typescript-eslint/parser": "^5.62.0",
    "@vscode/test-electron": "^2.3.2",
    "eslint": "^8.44.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "typescript": "^5.1.6"
  },
  "dependencies": {
    "axios": "^1.7.4",
    "semver": "^7.5.2",
    "uuid": "^9.0.1",
    "winston": "^3.13.0"
  }
}
